version: '3.7'
services:
  www:
    build: ./www
    volumes:
      - type: bind
        source: ./www
        target: /www
    ports: ['8080:8080']
    command: npm run serve
  web:
    build: .
    ports: ['5000:5000']
    volumes:
      - type: bind
        source: ./app
        target: /app
      - type: bind
        source: ./tests
        target: /tests
      - type: bind
        source: ./migrations
        target: /migrations
      - type: bind
        source: ./cli/cli
        target: /cli
      - type: bind
        source: ./cli/setup.py
        target: /setup.py
    command: flask run --host 0.0.0.0 --port 5000
    environment:
      PORT: 5000
      FLASK_APP: app
      FLASK_ENV: development
      PYTHONPATH: /
      DATABASE_URL: postgresql://developer:notsecret@postgres:5432/development
      QUICKSPLIT_API_URL: http://web:5000
      # These are all "test" keys in development, but we include all
      # versions in production so that test-users get sent to the test-stripe
      # data, even if they're created on the production app
      STRIPE_TEST_PUBLISHABLE_KEY: pk_test_vs6w4emCv9szUa8mJyeXKTey00IV5800C2
      STRIPE_TEST_SECRET_KEY: sk_test_InjhthRyfgYjrOXULoSylt4g009H6voKLf
      STRIPE_PRODUCTION_PUBLISHABLE_KEY: pk_test_vs6w4emCv9szUa8mJyeXKTey00IV5800C2
      STRIPE_PRODUCTION_SECRET_KEY: sk_test_InjhthRyfgYjrOXULoSylt4g009H6voKLf
  release:
    build:
      dockerfile: Dockerfile.release
      context: .
    environment:
      FLASK_APP: app
      FLASK_ENV: development
      PYTHONPATH: /
      DATABASE_URL: postgresql://developer:notsecret@postgres:5432/development
    depends_on:
      - web
      - postgres
    volumes:
      - type: bind
        source: ./app
        target: /app
      - type: bind
        source: ./tests
        target: /tests
      - type: bind
        source: ./migrations
        target: /migrations
      - type: bind
        source: ./cli/cli
        target: /cli
      - type: bind
        source: ./cli/setup.py
        target: /setup.py
  postgres:
    image: postgres:12-alpine
    environment:
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: notsecret
      POSTGRES_DB: development
